<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        8WmNcemFz6PwY4HFxw89ufv7cvWXpcPF01jwPK588299ne2xzBAIBAIBAIBAIBAIBAIBAIBAIMKAAAAA
        AAAAAAAAAAK/2l6XO2ubxsZy2RWO/XhFznHwlx+Tw3/lq9XwPKxr/wBe+fp7fw87s/1GeByJ4+/3OPuy
        rPv+Hsc/Vp8fl6bTPo6vN8f5unbX1x+Vt5GHtdG7XPjGzTlrmPW4p6O2LrnDw+PbrvjP2yrfZfp3tM55
        u2Pdw93TE/GfVw+LxXPbL1viHkTHy9Vod7xgAAAAAAAAAAAAAAAABQAIBAIBAIAAAABAIBAIBABo5HE1
        cmK34Y7PnlEXH3Ybceu3rht05eTT+nbOGzVrjVrw143OOEd3HvT3piPqyxrMRhttnbOc5NOrHRrx1ao7
        mGEVjjHwTGsxMG+222bt6psoxCAQCAQCAAQCAQACAAQCAQCAQRtu6soWdSFnUhZ1IWdSFnUhZ1IWdSFn
        UhZ1IWdSFnUhZ1IWdSFnUhZ1IWdSFnUhZ1IWdSFnUhZ1IWdSFnUhZ1IWdSFnUhZ1IWdSFnUhZ1IWdSFn
        UhZ1IWdSFnUhZ1IWdSIt0UIBAIBAIBAIBAIBAIBAIBAIBAIBAIBAIBAIBAIBAIBAIBAIBAIBAIBAICgA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADCxl1CHUIdQh1CHUIdQh1CL1CJ1CHUIdQh1CHUIdQh1CHUIdQ
        h1CHUIdQi9QidQh1CHUIdQh1CHUIdQh1CHUIdQh1CHUIdQh1CL1CJ1CHVhtjfAhAhAhAhAhAhAhAhAhA
        hAhAhAhAhAhAhAhAhAhAhAhAhAhAhAhAhAhAhAhAhAhAhAhAhAhAhAhH/9k=
</value>
  </data>
</root>